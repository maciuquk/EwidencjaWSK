// <auto-generated />
using System;
using EwidencjaWSK.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EwidencjaWSK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200905144944_o2")]
    partial class o2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EwidencjaWSK.Models.AdditionalDoc", b =>
                {
                    b.Property<int>("AdditionalDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("KindOfDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdditionalDocId");

                    b.ToTable("AdditionalDocs");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsInArmedList")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.Record", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheckDenyList")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckWarningSignalList")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInPartsBase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNecessaryMinistryPermit")
                        .HasColumnType("bit");

                    b.Property<string>("KindOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SuplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RecordId");

                    b.HasIndex("SuplierId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.RecordAdditionalDoc", b =>
                {
                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalDocId")
                        .HasColumnType("int");

                    b.HasKey("RecordId", "AdditionalDocId");

                    b.HasIndex("AdditionalDocId");

                    b.ToTable("RecordsAdditionalDocs");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.RecordPart", b =>
                {
                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("RecordId", "PartId");

                    b.HasIndex("PartId");

                    b.ToTable("RecordsParts");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EwidencjaWSK.Models.Record", b =>
                {
                    b.HasOne("EwidencjaWSK.Models.Supplier", "Supplier")
                        .WithMany("Records")
                        .HasForeignKey("SuplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EwidencjaWSK.Models.RecordAdditionalDoc", b =>
                {
                    b.HasOne("EwidencjaWSK.Models.AdditionalDoc", "AdditionalDoc")
                        .WithMany("Records")
                        .HasForeignKey("AdditionalDocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EwidencjaWSK.Models.Record", "Record")
                        .WithMany("AdditionalDocs")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EwidencjaWSK.Models.RecordPart", b =>
                {
                    b.HasOne("EwidencjaWSK.Models.Part", "Part")
                        .WithMany("Records")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EwidencjaWSK.Models.Record", "Record")
                        .WithMany("Parts")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
